(function ($, window, undefined) {
  $.extend(true, window, {
    "iui": {
      "sheet": {
        "model": {}
      }
    }
  });

  var nextId = 0;

  iui.sheet.model.ColumnGroup = function (info) {

    info = info || {};

    if (!(this instanceof iui.sheet.model.ColumnGroup)) {
      return new iui.sheet.model.ColumnGroup(info);
    }
    this.uid = info.id || "columngroup" + nextId++;
    this.id = info.id || this.uid;
    this.label = info.label;
    this.columns = iui.util.Collection();

    this.ui = null;

    this.renderer = info.renderer || iui.sheet.renderer.ColumnGroupHeader;
    this.editor = null;
  };


  $.extend(iui.sheet.model.ColumnGroup.prototype, iui.sheet.model.Entity, {

    width: function () {
      var w = 0,
        brw = 0,
        numberOfVisibleColumn = 0,
        $uiColumns = this._parent ? $.map(this._parent._columns.toArray(), function (column, index) {
          if (!column.ui) {
            return null;
          }
          var parent = column.ui.parent();
          if (!parent) {
            return null;
          }
          return parent.children()
            .index(column.ui) >= 0 ? column : null;
        }) : [];

      $.each(this.columns.toArray(), function (i) {
        if ($.inArray(this, $uiColumns) >= 0) {
          w += this.offset()
            .width;
          brw = parseInt(this.ui.css("border-right-width"));
          numberOfVisibleColumn++;
        }
      });
      return w + brw * (numberOfVisibleColumn - 1);
    }

  });

}(jQuery, window));
